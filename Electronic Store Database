#For this project, I downloaded chinook, which represents a digital media store and includes tables for artists, albums, media tracks, invoices, and customers.
#I'm using multiple tables to perform analytics on the data using SQL. 

#1 
Show Customers (their full names, customer ID, and country) who are not in the US.

SELECT FirstName, LastName, CustomerId, Country
FROM customers
WHERE Country != 'USA';

#2 
Show only the Customers from Brazil.

SELECT FirstName, LastName, CustomerId, Country
FROM customers
WHERE Country = 'Brazil';

#3 
Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.

SELECT customers.FirstName, customers.LastName, invoices.Invoiceid, invoices.InvoiceDate, invoices.BillingCountry
FROM customers
JOIN invoices
  ON customers.CustomerId = invoices.CustomerId
WHERE Country = 'Brazil';

#4 
Show the Employees who are Sales Agents.

SELECT *
FROM employees
WHERE Title = 'Sales Support Agent';

#5 
Find a unique/distinct list of billing countries from the Invoice table.

SELECT disting BillingCountry
FROM invoices;

#6 
Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.

SELECT e.LastName, e.FirstName, Inv.InvoiceId
FROM employees AS e
JOIN customers AS c
  ON c.SupportRepId = e.EmployeeId
JOIN invoices AS Inv
  ON Inv.CustomerId = c.CustomerId;

#7 
Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.

SELECT e.FirstName, e.LastName, c.FirstName, c.LastName, Inv.BillingCountry, Inv.Total
FROM employees AS e
JOIN customers AS c
  ON c.SupportRepId = e.EmployeeId
JOIN invoices AS Inv
  ON Inv.CustomerId = c.CustomerId;

#8 
How many Invoices were there in 2009?

SELECT COUNT(*)
FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

#9 
What are the total sales for 2009?

SELECT SUM(Total)
FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

#10 
Write a query that includes the purchased track name with each invoice line ID.

SELECT tracks.Name, invoice_items.InvoiceLineId
FROM tracks
JOIN invoice_items
  ON tracks.TrackId = invoice_items.TrackId
ORDER BY InvoiceLineId;

#11 
Write a query that includes the purchased track name AND artist name with each invoice line ID.

SELECT t.Name, art.Name, inv.InvoiceLineId
FROM artists AS art
JOIN albums AS alb
  ON alb.ArtistId = art.ArtistId
JOIN tracks AS t
  ON alb.AlbumId = t.AlbumId
JOIN invoice_items AS inv
  ON t.TrackId = inv.TrackId
ORDER BY InvoiceLineId;

#12 
Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.

SELECT t.Name, alb.Title, m.Name AS 'Media Type', g.Name AS 'Genre'
FROM tracks AS t
JOIN albums AS alb
  ON t.Albumid = alb.Albumid
JOIN media_types AS m
  ON t.MediaTypeid = m.MediaTypeid
JOIN genres AS g
  ON t.Genreid = g.Genreid;

#13 
Show the total sales made by each sales agent.

SELECT e.FirstName, e.LastName, ROUND(SUM(Inv.Total),2) AS 'Total Sales'
FROM employees AS e
JOIN customers AS c
  ON e.EmployeeId = c.SupportRepId
JOIN invoices AS Inv
  ON c.CustomerId = Inv.CustomerId
WHERE e.Title = 'Sales Support Agent'
GROUP BY e.FirstName;

# 14 
Which sales agent made the most dollars in sales in 2009?

SELECT e.FirstName, e.LastName, ROUND(SUM(Inv.Total),2) AS 'Total Sales'
FROM employees AS e
JOIN customers AS c
  ON e.EmployeeId = c.SupportRepId
JOIN invoices AS Inv
  ON c.CustomerId = Inv.CustomerId
WHERE e.Title = 'Sales Support Agent' AND Inv.InvoiceDate LIKE '2009%'
GROUP BY e.FirstName
ORDER BY (round(SUM(Inv.Total),2)) DESC LIMIT 1;

#15
Show the customers from Germany.

SELECT FirstName, LastName, Country
FROM customers
WHERE Country = 'Germany';

#16
Which employees were hired in 2002?

SELECT FirstName, LastName, HireDate
FROM employees
WHERE HireDate BETWEEN '2002-01-01' AND '2002-12-31';

#17
How many Classical tracks are there?

SELECT COUNT(t.Name)
FROM tracks AS t
JOIN playlist_track AS pt
    ON t.TrackId = pt.TrackId
JOIN playlists AS p
    ON pt.PlaylistId = p.PlaylistId
WHERE p.Name = 'Classical';
